#!/usr/bin/env ruby

require "beeminder"
require 'term/ansicolor'
include Term::ANSIColor

class Array
  def sum
    inject(0.0, &:+)
  end
  def avg
    sum / size
  end
end

class Beeminder::Goal
  def days_to_lose
    (losedate.to_date - Date.today).to_i
  end
  def goal_time
    (Time.now.to_i - @initday)/(3600*24) + 1
  end
end

token = File.read("#{ENV["HOME"]}/.beeminder_auth_token").chomp
goals = Beeminder::User.new(token).goals.select{|g| g.days_to_lose >= 0 && g.goal_type == :hustler }
puts "Beeminder status:"
goals.sort_by(&:days_to_lose).each_with_index do |g,i|
  dtl = '%2d' % (g.days_to_lose-1)
  dtl = green("#{dtl}") if i == 0
  per_week = 7*g.curval/g.goal_time
  puts "* #{'%20s' % g.title} - #{dtl} days to fail (#{g.curval.round}/#{g.goal_time}d, #{per_week.round(2)}/week)"
end
avg = (goals.map(&:days_to_lose).avg-1).round(2)
puts "Avearge: #{green(avg.to_s)}"
